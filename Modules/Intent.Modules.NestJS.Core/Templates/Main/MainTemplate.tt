<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { ConfigService } from '@nestjs/config';

async function bootstrap() {
  const app = await NestFactory.create(<#= AppModuleClass #><#= GetApplicationOptions() #>);<#= GetGlobalPipes() #>

  const config = new DocumentBuilder()
    .setTitle('<#= OutputTarget.Application.Name #>')
    .setDescription('<#= OutputTarget.Application.Description #>')
    .setVersion('1.0')
<# foreach (var option in _swaggerDocumentBuilderOptions) { #>
    <#= option #>
<# } #>
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('swagger', app, document);

  const configService = app.get(ConfigService);
  const port = configService.get<number>('HOST_PORT', 3000);
  
  await app.listen(port);
}
bootstrap();