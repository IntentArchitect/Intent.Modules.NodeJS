<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.TypeScript.Weaving.Decorators" #>
import { Injectable, Logger } from '@nestjs/common';

@Injectable()
<#= this.IntentIgnoreDecorator() #>
export class <#= ClassName #> {
  private readonly users: <#= this.GetUserContextName() #>[];
  private readonly logger = new Logger(UsersService.name);

  constructor() {
    this.logger.warn('Using example users list, replace with your own implementation.');

    this.users = [
      {
        userId: 1,
        username: 'john',
        password: 'changeme',
      },
      {
        userId: 2,
        username: 'chris',
        password: 'secret',
      },
      {
        userId: 3,
        username: 'maria',
        password: 'guess',
      },
    ];
  }

  async findOne(username: string): Promise<<#= this.GetUserContextName() #> | undefined> {
    return this.users.find(user => user.username === username);
  }
}
