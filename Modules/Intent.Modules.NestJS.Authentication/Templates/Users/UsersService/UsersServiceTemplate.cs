// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.NestJS.Authentication.Templates.Users.UsersService
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.TypeScript.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modules.TypeScript.Weaving.Decorators;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.NestJS.Authentication\Templates\Users\UsersService\UsersServiceTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class UsersServiceTemplate : TypeScriptTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("import { Injectable, Logger } from \'@nestjs/common\';\r\n\r\n@Injectable()\r\n");
            
            #line 14 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.NestJS.Authentication\Templates\Users\UsersService\UsersServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.IntentIgnoreDecorator()));
            
            #line default
            #line hidden
            this.Write("\r\nexport class ");
            
            #line 15 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.NestJS.Authentication\Templates\Users\UsersService\UsersServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" {\r\n  private readonly users: ");
            
            #line 16 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.NestJS.Authentication\Templates\Users\UsersService\UsersServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetUserContextName()));
            
            #line default
            #line hidden
            this.Write(@"[];
  private readonly logger = new Logger(UsersService.name);

  constructor() {
    this.logger.warn('Using example users list, replace with your own implementation.');

    this.users = [
      {
        userId: 1,
        username: 'john',
        password: 'changeme',
      },
      {
        userId: 2,
        username: 'chris',
        password: 'secret',
      },
      {
        userId: 3,
        username: 'maria',
        password: 'guess',
      },
    ];
  }

  async findOne(username: string): Promise<");
            
            #line 41 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.NestJS.Authentication\Templates\Users\UsersService\UsersServiceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetUserContextName()));
            
            #line default
            #line hidden
            this.Write(" | undefined> {\r\n    return this.users.find(user => user.username === username);\r" +
                    "\n  }\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
