// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Npm.Templates.PackageJsonFile
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.Npm\Templates\PackageJsonFile\PackageJsonFileTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class PackageJsonFileTemplate : IntentTemplateBase<object, Intent.Modules.Npm.Templates.PackageJsonFile.PackageJsonFileDecorator>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("{\r\n  \"name\": \"");
            
            #line 9 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.Npm\Templates\PackageJsonFile\PackageJsonFileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OutputTarget.ApplicationName().ToKebabCase()));
            
            #line default
            #line hidden
            this.Write("\",\r\n  \"private\": true,\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"");
            
            #line 12 "C:\Dev\Intent.Modules.NodeJS\Modules\Intent.Modules.Npm\Templates\PackageJsonFile\PackageJsonFileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(OutputTarget.ExecutionContext.GetApplicationConfig().Description));
            
            #line default
            #line hidden
            this.Write("\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n  },\r\n  \"dependencies\": {\r\n  },\r\n  \"devD" +
                    "ependencies\": {\r\n  },\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
