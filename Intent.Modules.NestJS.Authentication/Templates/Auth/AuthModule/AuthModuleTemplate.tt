<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
import { Module } from '@nestjs/common';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { JwtModule } from '@nestjs/jwt';
import { PassportModule } from '@nestjs/passport';

@Module({
  imports: [
    <#= this.GetUsersModuleName() #>,
    PassportModule,
    JwtModule.registerAsync({
      imports: [ConfigModule],
      useFactory: (config: ConfigService) => ({
        secret: config.get('<#= EnvironmentVariables.JwtKey #>'),
        signOptions: { expiresIn: '60s' },
      }),
      inject: [ConfigService]
    }),
  ],
  providers: [<#= this.GetAuthServiceName() #>, <#= this.GetLocalStrategyName() #>, <#= this.GetJwtStrategyName() #>],
  exports: [<#= this.GetAuthServiceName() #>],
})
export class <#= ClassName #> { }