<#@ template language="C#" inherits="TypeScriptTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.TypeScript.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
import { Injectable } from '@nestjs/common';
import { JwtService } from '@nestjs/jwt';

@Injectable()
export class <#= ClassName #> {
  constructor(
    private readonly usersService: <#= this.GetUsersServiceName() #>,
    private readonly jwtService: JwtService,
  ) { }

  async validateUser(username: string, pass: string): Promise<<#= this.GetUserName() #>> {
    const user = await this.usersService.findOne(username);
    if (user && user.password === pass) {
      const { password, ...result } = user;
      return result;
    }
    return null;
  }

  async login(user: <#= this.GetUserName() #>): Promise<{ access_token: string }> {
    const payload = { sub: user.userId, ...user };
    return {
      access_token: this.jwtService.sign(payload),
    };
  }
}